// Copyright 2018, Google
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/api/annotations.proto";

package pyre;

message AuthorizeAccountRequest {}

message AuthorizeAccountResponse {
  string account_id = 1;
  string authorization_token = 2;
  string api_url = 3;
  string download_url = 4;
  int32 recommended_part_size = 5;
  int32 absolute_mininum_part_size = 6;
  int32 minimum_part_size = 7;
}

message ListBucketsRequest {
  string account_id = 1;
  string bucket_id = 2;
  string bucket_name = 3;
  repeated string bucket_types = 4;
}

message LifecycleRule {
  int32 days_from_uploading_to_hiding = 1;
  int32 days_from_hiding_to_deleting = 2;
  string file_name_prefix = 3;
}

message CorsRule {
  string cors_rule_name = 1;
  repeated string allowed_origins = 2;
  repeated string allowed_operations = 3;
  repeated string allowed_headers = 4;
  repeated string expose_headers = 5;
  int32 max_age_seconds = 6;
}

message Bucket {
  string account_id = 1;
  string bucket_id = 2;
  string bucket_name = 3;
  string bucket_type = 4;
  map<string, string> bucket_info = 5;
  repeated CorsRule cores_rules = 6;
  repeated LifecycleRule lifecycle_rules = 7;
  int32 revision = 8;
}

message ListBucketsResponse {
  repeated Bucket buckets = 1;
}

message GetUploadUrlRequest {
  string bucket_id = 1;
}

message GetUploadUrlResponse {
  string bucket_id = 1;
  string upload_url = 2;
  string authorization_token = 3;
}

message UploadFileRequest {
  string contents = 1;
  string path = 2;
}

message UploadFileResponse {
  string file_id = 1;
  string file_name = 2;
  string account_id = 3;
  string bucket_id = 4;
  int32 content_length = 5;
  string content_sha1 = 6;
  string content_type = 7;
  map<string, string> file_info = 8;
  string action = 9;
  int64 upload_timestamp = 10;
}

service PyreService {
  rpc AuthorizeAccount(AuthorizeAccountRequest) returns (AuthorizeAccountResponse) {
    option (google.api.http) = {
      get: "/b2api/v1/b2_authorize_account"
    };
  }

  rpc ListBuckets(ListBucketsRequest) returns (ListBucketsResponse) {
    option (google.api.http) = {
      post: "/b2api/v1/b2_list_buckets"
      body: "*"
    };
  }

  rpc GetUploadUrl(GetUploadUrlRequest) returns (GetUploadUrlResponse) {
    option (google.api.http) = {
      post: "/b2api/v1/b2_get_upload_url"
      body: "*"
    };
  }

  rpc CreateBucket(Bucket) returns (Bucket) {
    option (google.api.http) = {
      post: "/b2api/v1/b2_create_bucket"
      body: "*"
    };
  }

  rpc UploadFile(UploadFileRequest) returns (UploadFileResponse) {
    option (google.api.http) = {
      post: "/b2api/v1/b2_upload_file/{path}"
      body: "contents"
    };
  }
}
