// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pyre.proto

package pyre

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AuthorizeAccountRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorizeAccountRequest) Reset()         { *m = AuthorizeAccountRequest{} }
func (m *AuthorizeAccountRequest) String() string { return proto.CompactTextString(m) }
func (*AuthorizeAccountRequest) ProtoMessage()    {}
func (*AuthorizeAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pyre_8e01ffe18769c983, []int{0}
}
func (m *AuthorizeAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizeAccountRequest.Unmarshal(m, b)
}
func (m *AuthorizeAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizeAccountRequest.Marshal(b, m, deterministic)
}
func (dst *AuthorizeAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizeAccountRequest.Merge(dst, src)
}
func (m *AuthorizeAccountRequest) XXX_Size() int {
	return xxx_messageInfo_AuthorizeAccountRequest.Size(m)
}
func (m *AuthorizeAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizeAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizeAccountRequest proto.InternalMessageInfo

type AuthorizeAccountResponse struct {
	AccountId               string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AuthorizationToken      string   `protobuf:"bytes,2,opt,name=authorization_token,json=authorizationToken,proto3" json:"authorization_token,omitempty"`
	ApiUrl                  string   `protobuf:"bytes,3,opt,name=api_url,json=apiUrl,proto3" json:"api_url,omitempty"`
	DownloadUrl             string   `protobuf:"bytes,4,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	RecommendedPartSize     int64    `protobuf:"varint,5,opt,name=recommended_part_size,json=recommendedPartSize,proto3" json:"recommended_part_size,omitempty"`
	AbsoluteMininumPartSize int64    `protobuf:"varint,6,opt,name=absolute_mininum_part_size,json=absoluteMininumPartSize,proto3" json:"absolute_mininum_part_size,omitempty"`
	MinimumPartSize         int64    `protobuf:"varint,7,opt,name=minimum_part_size,json=minimumPartSize,proto3" json:"minimum_part_size,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *AuthorizeAccountResponse) Reset()         { *m = AuthorizeAccountResponse{} }
func (m *AuthorizeAccountResponse) String() string { return proto.CompactTextString(m) }
func (*AuthorizeAccountResponse) ProtoMessage()    {}
func (*AuthorizeAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_pyre_8e01ffe18769c983, []int{1}
}
func (m *AuthorizeAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizeAccountResponse.Unmarshal(m, b)
}
func (m *AuthorizeAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizeAccountResponse.Marshal(b, m, deterministic)
}
func (dst *AuthorizeAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizeAccountResponse.Merge(dst, src)
}
func (m *AuthorizeAccountResponse) XXX_Size() int {
	return xxx_messageInfo_AuthorizeAccountResponse.Size(m)
}
func (m *AuthorizeAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizeAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizeAccountResponse proto.InternalMessageInfo

func (m *AuthorizeAccountResponse) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *AuthorizeAccountResponse) GetAuthorizationToken() string {
	if m != nil {
		return m.AuthorizationToken
	}
	return ""
}

func (m *AuthorizeAccountResponse) GetApiUrl() string {
	if m != nil {
		return m.ApiUrl
	}
	return ""
}

func (m *AuthorizeAccountResponse) GetDownloadUrl() string {
	if m != nil {
		return m.DownloadUrl
	}
	return ""
}

func (m *AuthorizeAccountResponse) GetRecommendedPartSize() int64 {
	if m != nil {
		return m.RecommendedPartSize
	}
	return 0
}

func (m *AuthorizeAccountResponse) GetAbsoluteMininumPartSize() int64 {
	if m != nil {
		return m.AbsoluteMininumPartSize
	}
	return 0
}

func (m *AuthorizeAccountResponse) GetMinimumPartSize() int64 {
	if m != nil {
		return m.MinimumPartSize
	}
	return 0
}

type GetUploadUrlRequest struct {
	BucketId             string   `protobuf:"bytes,1,opt,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUploadUrlRequest) Reset()         { *m = GetUploadUrlRequest{} }
func (m *GetUploadUrlRequest) String() string { return proto.CompactTextString(m) }
func (*GetUploadUrlRequest) ProtoMessage()    {}
func (*GetUploadUrlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pyre_8e01ffe18769c983, []int{2}
}
func (m *GetUploadUrlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUploadUrlRequest.Unmarshal(m, b)
}
func (m *GetUploadUrlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUploadUrlRequest.Marshal(b, m, deterministic)
}
func (dst *GetUploadUrlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUploadUrlRequest.Merge(dst, src)
}
func (m *GetUploadUrlRequest) XXX_Size() int {
	return xxx_messageInfo_GetUploadUrlRequest.Size(m)
}
func (m *GetUploadUrlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUploadUrlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUploadUrlRequest proto.InternalMessageInfo

func (m *GetUploadUrlRequest) GetBucketId() string {
	if m != nil {
		return m.BucketId
	}
	return ""
}

type GetUploadUrlResponse struct {
	BucketId             string   `protobuf:"bytes,1,opt,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`
	UploadUrl            string   `protobuf:"bytes,2,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"`
	AuthorizationToken   string   `protobuf:"bytes,3,opt,name=authorization_token,json=authorizationToken,proto3" json:"authorization_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUploadUrlResponse) Reset()         { *m = GetUploadUrlResponse{} }
func (m *GetUploadUrlResponse) String() string { return proto.CompactTextString(m) }
func (*GetUploadUrlResponse) ProtoMessage()    {}
func (*GetUploadUrlResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_pyre_8e01ffe18769c983, []int{3}
}
func (m *GetUploadUrlResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUploadUrlResponse.Unmarshal(m, b)
}
func (m *GetUploadUrlResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUploadUrlResponse.Marshal(b, m, deterministic)
}
func (dst *GetUploadUrlResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUploadUrlResponse.Merge(dst, src)
}
func (m *GetUploadUrlResponse) XXX_Size() int {
	return xxx_messageInfo_GetUploadUrlResponse.Size(m)
}
func (m *GetUploadUrlResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUploadUrlResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUploadUrlResponse proto.InternalMessageInfo

func (m *GetUploadUrlResponse) GetBucketId() string {
	if m != nil {
		return m.BucketId
	}
	return ""
}

func (m *GetUploadUrlResponse) GetUploadUrl() string {
	if m != nil {
		return m.UploadUrl
	}
	return ""
}

func (m *GetUploadUrlResponse) GetAuthorizationToken() string {
	if m != nil {
		return m.AuthorizationToken
	}
	return ""
}

type UploadFileRequest struct {
	Contents             string   `protobuf:"bytes,1,opt,name=contents,proto3" json:"contents,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadFileRequest) Reset()         { *m = UploadFileRequest{} }
func (m *UploadFileRequest) String() string { return proto.CompactTextString(m) }
func (*UploadFileRequest) ProtoMessage()    {}
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pyre_8e01ffe18769c983, []int{4}
}
func (m *UploadFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadFileRequest.Unmarshal(m, b)
}
func (m *UploadFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadFileRequest.Marshal(b, m, deterministic)
}
func (dst *UploadFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadFileRequest.Merge(dst, src)
}
func (m *UploadFileRequest) XXX_Size() int {
	return xxx_messageInfo_UploadFileRequest.Size(m)
}
func (m *UploadFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadFileRequest proto.InternalMessageInfo

func (m *UploadFileRequest) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

func (m *UploadFileRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type UploadFileResponse struct {
	FileId               string            `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	FileName             string            `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	AccountId            string            `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	BucketId             string            `protobuf:"bytes,4,opt,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`
	ContentLength        int64             `protobuf:"varint,5,opt,name=content_length,json=contentLength,proto3" json:"content_length,omitempty"`
	ContentSha1          string            `protobuf:"bytes,6,opt,name=content_sha1,json=contentSha1,proto3" json:"content_sha1,omitempty"`
	ContentType          string            `protobuf:"bytes,7,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	FileInfo             map[string]string `protobuf:"bytes,8,rep,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Action               string            `protobuf:"bytes,9,opt,name=action,proto3" json:"action,omitempty"`
	UploadTimestamp      int64             `protobuf:"varint,10,opt,name=upload_timestamp,json=uploadTimestamp,proto3" json:"upload_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UploadFileResponse) Reset()         { *m = UploadFileResponse{} }
func (m *UploadFileResponse) String() string { return proto.CompactTextString(m) }
func (*UploadFileResponse) ProtoMessage()    {}
func (*UploadFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_pyre_8e01ffe18769c983, []int{5}
}
func (m *UploadFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadFileResponse.Unmarshal(m, b)
}
func (m *UploadFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadFileResponse.Marshal(b, m, deterministic)
}
func (dst *UploadFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadFileResponse.Merge(dst, src)
}
func (m *UploadFileResponse) XXX_Size() int {
	return xxx_messageInfo_UploadFileResponse.Size(m)
}
func (m *UploadFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadFileResponse proto.InternalMessageInfo

func (m *UploadFileResponse) GetFileId() string {
	if m != nil {
		return m.FileId
	}
	return ""
}

func (m *UploadFileResponse) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *UploadFileResponse) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *UploadFileResponse) GetBucketId() string {
	if m != nil {
		return m.BucketId
	}
	return ""
}

func (m *UploadFileResponse) GetContentLength() int64 {
	if m != nil {
		return m.ContentLength
	}
	return 0
}

func (m *UploadFileResponse) GetContentSha1() string {
	if m != nil {
		return m.ContentSha1
	}
	return ""
}

func (m *UploadFileResponse) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *UploadFileResponse) GetFileInfo() map[string]string {
	if m != nil {
		return m.FileInfo
	}
	return nil
}

func (m *UploadFileResponse) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *UploadFileResponse) GetUploadTimestamp() int64 {
	if m != nil {
		return m.UploadTimestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*AuthorizeAccountRequest)(nil), "pyre.AuthorizeAccountRequest")
	proto.RegisterType((*AuthorizeAccountResponse)(nil), "pyre.AuthorizeAccountResponse")
	proto.RegisterType((*GetUploadUrlRequest)(nil), "pyre.GetUploadUrlRequest")
	proto.RegisterType((*GetUploadUrlResponse)(nil), "pyre.GetUploadUrlResponse")
	proto.RegisterType((*UploadFileRequest)(nil), "pyre.UploadFileRequest")
	proto.RegisterType((*UploadFileResponse)(nil), "pyre.UploadFileResponse")
	proto.RegisterMapType((map[string]string)(nil), "pyre.UploadFileResponse.FileInfoEntry")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PyreServiceClient is the client API for PyreService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PyreServiceClient interface {
	AuthorizeAccount(ctx context.Context, in *AuthorizeAccountRequest, opts ...grpc.CallOption) (*AuthorizeAccountResponse, error)
	GetUploadUrl(ctx context.Context, in *GetUploadUrlRequest, opts ...grpc.CallOption) (*GetUploadUrlResponse, error)
	UploadFile(ctx context.Context, in *UploadFileRequest, opts ...grpc.CallOption) (*UploadFileResponse, error)
}

type pyreServiceClient struct {
	cc *grpc.ClientConn
}

func NewPyreServiceClient(cc *grpc.ClientConn) PyreServiceClient {
	return &pyreServiceClient{cc}
}

func (c *pyreServiceClient) AuthorizeAccount(ctx context.Context, in *AuthorizeAccountRequest, opts ...grpc.CallOption) (*AuthorizeAccountResponse, error) {
	out := new(AuthorizeAccountResponse)
	err := c.cc.Invoke(ctx, "/pyre.PyreService/AuthorizeAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pyreServiceClient) GetUploadUrl(ctx context.Context, in *GetUploadUrlRequest, opts ...grpc.CallOption) (*GetUploadUrlResponse, error) {
	out := new(GetUploadUrlResponse)
	err := c.cc.Invoke(ctx, "/pyre.PyreService/GetUploadUrl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pyreServiceClient) UploadFile(ctx context.Context, in *UploadFileRequest, opts ...grpc.CallOption) (*UploadFileResponse, error) {
	out := new(UploadFileResponse)
	err := c.cc.Invoke(ctx, "/pyre.PyreService/UploadFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PyreServiceServer is the server API for PyreService service.
type PyreServiceServer interface {
	AuthorizeAccount(context.Context, *AuthorizeAccountRequest) (*AuthorizeAccountResponse, error)
	GetUploadUrl(context.Context, *GetUploadUrlRequest) (*GetUploadUrlResponse, error)
	UploadFile(context.Context, *UploadFileRequest) (*UploadFileResponse, error)
}

func RegisterPyreServiceServer(s *grpc.Server, srv PyreServiceServer) {
	s.RegisterService(&_PyreService_serviceDesc, srv)
}

func _PyreService_AuthorizeAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthorizeAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PyreServiceServer).AuthorizeAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pyre.PyreService/AuthorizeAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PyreServiceServer).AuthorizeAccount(ctx, req.(*AuthorizeAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PyreService_GetUploadUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUploadUrlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PyreServiceServer).GetUploadUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pyre.PyreService/GetUploadUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PyreServiceServer).GetUploadUrl(ctx, req.(*GetUploadUrlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PyreService_UploadFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PyreServiceServer).UploadFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pyre.PyreService/UploadFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PyreServiceServer).UploadFile(ctx, req.(*UploadFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PyreService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pyre.PyreService",
	HandlerType: (*PyreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthorizeAccount",
			Handler:    _PyreService_AuthorizeAccount_Handler,
		},
		{
			MethodName: "GetUploadUrl",
			Handler:    _PyreService_GetUploadUrl_Handler,
		},
		{
			MethodName: "UploadFile",
			Handler:    _PyreService_UploadFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pyre.proto",
}

func init() { proto.RegisterFile("pyre.proto", fileDescriptor_pyre_8e01ffe18769c983) }

var fileDescriptor_pyre_8e01ffe18769c983 = []byte{
	// 686 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xdd, 0x4e, 0xdb, 0x4a,
	0x10, 0x56, 0x7e, 0x08, 0xc9, 0x04, 0xce, 0x81, 0x85, 0x73, 0x62, 0x42, 0xa1, 0xa9, 0xa5, 0x22,
	0x4a, 0x25, 0xa2, 0xa4, 0x37, 0x15, 0x5c, 0x21, 0xd4, 0x56, 0x91, 0xda, 0x0a, 0x05, 0xb8, 0xb6,
	0x36, 0xf1, 0x90, 0xac, 0xb0, 0x77, 0x5d, 0x7b, 0x4d, 0x15, 0xaa, 0xde, 0xb4, 0x8f, 0xd0, 0x97,
	0xe9, 0x7d, 0x1f, 0xa1, 0xaf, 0xd0, 0xbb, 0xbe, 0x44, 0xb5, 0x3f, 0x26, 0x71, 0x20, 0xbd, 0xdb,
	0x99, 0xf9, 0x66, 0x67, 0xe7, 0xfb, 0x66, 0x16, 0x20, 0x9a, 0xc4, 0x78, 0x18, 0xc5, 0x42, 0x0a,
	0x52, 0x56, 0xe7, 0xe6, 0xa3, 0x91, 0x10, 0xa3, 0x00, 0xdb, 0x34, 0x62, 0x6d, 0xca, 0xb9, 0x90,
	0x54, 0x32, 0xc1, 0x13, 0x83, 0x71, 0xb7, 0xa0, 0x71, 0x92, 0xca, 0xb1, 0x88, 0xd9, 0x2d, 0x9e,
	0x0c, 0x87, 0x22, 0xe5, 0xb2, 0x8f, 0x1f, 0x52, 0x4c, 0xa4, 0xfb, 0xa3, 0x08, 0xce, 0xfd, 0x58,
	0x12, 0x09, 0x9e, 0x20, 0xd9, 0x01, 0xa0, 0xc6, 0xe5, 0x31, 0xdf, 0x29, 0xb4, 0x0a, 0xfb, 0xb5,
	0x7e, 0xcd, 0x7a, 0x7a, 0x3e, 0x69, 0xc3, 0x06, 0xb5, 0xa9, 0xba, 0x9c, 0x27, 0xc5, 0x35, 0x72,
	0xa7, 0xa8, 0x71, 0x24, 0x17, 0xba, 0x50, 0x11, 0xd2, 0x80, 0x65, 0x1a, 0x31, 0x2f, 0x8d, 0x03,
	0xa7, 0xa4, 0x41, 0x15, 0x1a, 0xb1, 0xcb, 0x38, 0x20, 0x4f, 0x60, 0xc5, 0x17, 0x1f, 0x79, 0x20,
	0xa8, 0xaf, 0xa3, 0x65, 0x1d, 0xad, 0x67, 0x3e, 0x05, 0xe9, 0xc2, 0x7f, 0x31, 0x0e, 0x45, 0x18,
	0x22, 0xf7, 0xd1, 0xf7, 0x22, 0x1a, 0x4b, 0x2f, 0x61, 0xb7, 0xe8, 0x2c, 0xb5, 0x0a, 0xfb, 0xa5,
	0xfe, 0xc6, 0x4c, 0xf0, 0x8c, 0xc6, 0xf2, 0x9c, 0xdd, 0x22, 0x39, 0x86, 0x26, 0x1d, 0x24, 0x22,
	0x48, 0x25, 0x7a, 0x21, 0xe3, 0x8c, 0xa7, 0xe1, 0x4c, 0x62, 0x45, 0x27, 0x36, 0x32, 0xc4, 0x3b,
	0x03, 0xb8, 0x4b, 0x3e, 0x80, 0x75, 0x95, 0x13, 0xe6, 0x72, 0x96, 0x75, 0xce, 0xbf, 0x36, 0x90,
	0x61, 0xdd, 0x2e, 0x6c, 0xbc, 0x41, 0x79, 0x19, 0xd9, 0xc7, 0x5a, 0x72, 0xc9, 0x36, 0xd4, 0x06,
	0xe9, 0xf0, 0x1a, 0x67, 0xe8, 0xab, 0x1a, 0x47, 0xcf, 0x77, 0xbf, 0x16, 0x60, 0x33, 0x9f, 0x64,
	0x59, 0xff, 0x5b, 0x96, 0x92, 0x24, 0x8d, 0xee, 0x78, 0x32, 0x54, 0xd7, 0xd2, 0xec, 0x8e, 0x45,
	0x92, 0x94, 0x16, 0x49, 0xe2, 0x9e, 0xc2, 0xba, 0x79, 0xc1, 0x6b, 0x16, 0x60, 0xf6, 0xee, 0x26,
	0x54, 0x87, 0x82, 0x4b, 0xe4, 0x32, 0xc9, 0x1e, 0x90, 0xd9, 0x84, 0x40, 0x39, 0xa2, 0x72, 0x6c,
	0x4b, 0xeb, 0xb3, 0xfb, 0xbd, 0x04, 0x64, 0xf6, 0x16, 0xdb, 0x48, 0x03, 0x96, 0xaf, 0x58, 0x80,
	0xd3, 0x36, 0x2a, 0xca, 0xec, 0xf9, 0xaa, 0x43, 0x1d, 0xe0, 0x34, 0x44, 0x7b, 0x51, 0x55, 0x39,
	0xde, 0xd3, 0x70, 0x7e, 0xe8, 0x4a, 0xf3, 0x43, 0x97, 0x63, 0xa7, 0x3c, 0xc7, 0xce, 0x53, 0xf8,
	0xc7, 0x3e, 0xd4, 0x0b, 0x90, 0x8f, 0xe4, 0xd8, 0x4e, 0xc7, 0xaa, 0xf5, 0xbe, 0xd5, 0x4e, 0x35,
	0x6e, 0x19, 0x2c, 0x19, 0xd3, 0x8e, 0x9e, 0x84, 0x5a, 0xbf, 0x6e, 0x7d, 0xe7, 0x63, 0xda, 0x99,
	0x85, 0xc8, 0x49, 0x64, 0x84, 0x9f, 0x42, 0x2e, 0x26, 0x11, 0x92, 0x53, 0xdb, 0x05, 0xe3, 0x57,
	0xc2, 0xa9, 0xb6, 0x4a, 0xfb, 0xf5, 0xee, 0xde, 0xa1, 0xde, 0xcc, 0xfb, 0x5c, 0x1c, 0x2a, 0xa3,
	0xc7, 0xaf, 0xc4, 0x2b, 0x2e, 0xe3, 0x89, 0xe9, 0x56, 0x99, 0xe4, 0x7f, 0xa8, 0xd0, 0xa1, 0x92,
	0xc3, 0xa9, 0xd9, 0x8d, 0xd0, 0x16, 0x79, 0x06, 0x6b, 0x56, 0x67, 0xc9, 0x42, 0x4c, 0x24, 0x0d,
	0x23, 0x07, 0xcc, 0xf0, 0x19, 0xff, 0x45, 0xe6, 0x6e, 0x1e, 0xc3, 0x6a, 0xee, 0x76, 0xb2, 0x06,
	0xa5, 0x6b, 0x9c, 0x58, 0xce, 0xd5, 0x91, 0x6c, 0xc2, 0xd2, 0x0d, 0x0d, 0xd2, 0x8c, 0x6c, 0x63,
	0x1c, 0x15, 0x5f, 0x16, 0xba, 0xbf, 0x8b, 0x50, 0x3f, 0x9b, 0xc4, 0x78, 0x8e, 0xf1, 0x0d, 0x1b,
	0x22, 0x99, 0xc0, 0xda, 0xfc, 0x77, 0x40, 0x76, 0x4c, 0x57, 0x0b, 0xbe, 0x90, 0xe6, 0xee, 0xa2,
	0xb0, 0x69, 0xdd, 0xdd, 0xfb, 0xf2, 0xf3, 0xd7, 0xb7, 0x62, 0x8b, 0xec, 0xb6, 0x07, 0x5d, 0xf5,
	0x3f, 0xdd, 0x74, 0xda, 0x83, 0xae, 0x97, 0xcd, 0x22, 0x7a, 0x56, 0x5b, 0x12, 0xc2, 0xca, 0xec,
	0x3e, 0x90, 0x2d, 0x73, 0xef, 0x03, 0x8b, 0xd5, 0x6c, 0x3e, 0x14, 0xca, 0x97, 0x73, 0xb7, 0x73,
	0xe5, 0x46, 0x28, 0xbd, 0xe9, 0xe2, 0x1c, 0x15, 0x0e, 0x48, 0x0c, 0x30, 0xd5, 0x89, 0x34, 0xee,
	0x2b, 0x67, 0x4a, 0x39, 0x8b, 0x24, 0x75, 0x3b, 0xba, 0xd0, 0x73, 0xf7, 0x71, 0xae, 0x90, 0x2d,
	0xa2, 0x04, 0x6e, 0x7f, 0x52, 0xdb, 0xf1, 0xf9, 0xe8, 0x6e, 0x79, 0x06, 0x15, 0xfd, 0x1f, 0xbf,
	0xf8, 0x13, 0x00, 0x00, 0xff, 0xff, 0x87, 0x89, 0xcc, 0x6c, 0xc1, 0x05, 0x00, 0x00,
}
